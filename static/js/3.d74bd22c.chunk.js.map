{"version":3,"sources":["../node_modules/n3/src/N3Writer.js","../node_modules/n3/src/N3Store.js","../node_modules/n3/src/N3StreamParser.js","../node_modules/n3/src/N3StreamWriter.js","../node_modules/n3/node_modules/readable-stream/errors-browser.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/inherits/inherits_browser.js","../node_modules/n3/node_modules/readable-stream/readable-browser.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/util-deprecate/browser.js","../node_modules/safe-buffer/index.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/pipeline.js"],"names":["DEFAULTGRAPH","N3DataFactory","defaultGraph","rdf","namespaces","xsd","escape","escapeAll","escapedCharacters","SerializedTerm","Term","N3Writer","outputStream","options","this","_prefixRegex","write","_lists","lists","_outputStream","_endStream","undefined","end","output","chunk","encoding","done","_subject","test","format","_lineMode","_writeQuad","_writeQuadLine","_graph","_baseIRI","baseIRI","_prefixIRIs","Object","create","prefixes","addPrefixes","equals","string","callback","subject","predicate","object","graph","_write","_inDefaultGraph","_encodeIriOrBlank","_predicate","_encodeObject","_encodePredicate","_encodeSubject","error","_prefixMatch","quadToString","value","quads","map","t","join","entity","termType","_encodeQuad","list","id","iri","startsWith","substr","length","replace","characterReplacer","prefixMatch","exec","literal","language","datatype","boolean","integer","decimal","double","type","_encodeLiteral","isDefaultGraph","Error","i","addQuad","prefix","hasPrefixes","IRIlist","prefixList","prefixIRI","RegExp","child","children","contents","elements","Array","_blockedWrite","singleDone","result","character","charCodeAt","toString","N3Store","_size","_graphs","_id","_ids","_entities","_blankNodeIndex","_factory","factory","addQuads","size","subjects","graphs","graphKey","subjectKey","predicateKey","keys","index0","key0","key1","key2","index1","index2","existed","key","name0","name1","name2","array","tmp","entityKeys","value0","entity0","value1","entity1","values","l","parts","termFromId","quad","push","count","isString","uniqueIds","termToId","graphItem","predicates","objects","freeze","ids","entities","changed","_addToIndex","removeQuad","getQuads","stream","on","_removeFromIndex","Readable","objectMode","_read","remove","removeMatches","content","subjectId","predicateId","objectId","_getGraphs","graphId","_findInIndex","DatasetCoreAndReadableStream","_countInIndex","some","every","results","forSubjects","s","_uniqueEntities","_loopBy2Keys","_loopByKey1","_loopByKey0","_loop","forPredicates","p","forObjects","o","forGraphs","g","suggestedName","name","index","blankNode","ignoreErrors","onError","node","message","tails","rest","nil","toRemove","forEach","tailQuad","head","headPos","items","malformed","current","objectQuads","subjectQuads","first","parent","unshift","removeQuads","Symbol","iterator","String","n3Store","assign","_filtered","filtered","add","delete","has","N3StreamParser","onData","onEnd","decodeStrings","_readableState","N3Parser","parse","event","emit","uri","_transform","_flush","Transform","N3StreamWriter","writer","writableObjectMode","_writer","addPrefix","codes","createErrorType","code","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","call","getMessage","prototype","constructor","__proto__","oneOf","expected","thing","isArray","len","concat","slice","TypeError","actual","determiner","search","pos","msg","str","this_len","substring","endsWith","start","indexOf","includes","arg","module","exports","objectKeys","obj","Duplex","require","Writable","v","method","allowHalfOpen","readable","writable","once","onend","_writableState","ended","process","nextTick","onEndNT","self","defineProperty","enumerable","get","highWaterMark","getBuffer","destroyed","set","ctor","superCtor","super_","configurable","TempCtor","Stream","PassThrough","finished","pipeline","ERR_STREAM_PREMATURE_CLOSE","noop","eos","opts","called","_len","arguments","args","_key","apply","onlegacyfinish","onfinish","writableEnded","readableEnded","endEmitted","onerror","err","onclose","onrequest","req","setHeader","abort","isRequest","removeListener","ReadableState","EventEmitter","EElistenerCount","emitter","listeners","Buffer","OurUint8Array","global","Uint8Array","debug","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","from","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","readableObjectMode","buffer","pipes","pipesCount","flowing","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","read","destroy","_destroy","readableAddChunk","addToFront","skipChunkCheck","er","state","emitReadable","emitReadable_","onEofChunk","isBuffer","chunkInvalid","getPrototypeOf","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","cb","isPaused","setEncoding","enc","data","next","clear","MAX_HWM","howMuchToRead","n","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","ret","shift","consume","endReadable","endReadableNT","wState","xs","x","parseInt","nOrig","doRead","pipe","dest","pipeOpts","src","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","fn","prependListener","_events","dests","splice","ev","res","addListener","removeAllListeners","wrap","_this","bind","asyncIterator","_fromList","iterable","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","errorEmitted","ending","finalCalled","prefinished","rState","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","isFinite","Math","floor","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","noDecode","writing","corked","bufferProcessing","onwrite","writecb","writelen","onwriteStateUpdate","finishMaybe","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","prefinish","out","_","hasInstance","Function","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","endWritable","isEncoding","nb","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","utf8CheckByte","byte","buf","r","utf8CheckExtraBytes","copy","c","total","j","utf8CheckIncomplete","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","flush","err2","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_defineProperty","_defineProperties","target","props","descriptor","inspect","custom","instance","Constructor","_classCallCheck","tail","protoProps","staticProps","alloc","offset","hasStrings","_getString","_getBuffer","source","getOwnPropertyDescriptors","defineProperties","_objectSpread","depth","customInspect","config","localStorage","val","warned","console","trace","warn","copyProps","dst","SafeBuffer","encodingOrOffset","allocUnsafeSlow","fill","SlowBuffer","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","resolve","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","Promise","reject","promise","lastPromise","then","wrapForNext","_this2","_Object$create","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","pop","destroys","reduce"],"mappings":"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","file":"static/js/3.d74bd22c.chunk.js","sourcesContent":["// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._baseIRI = options.baseIRI;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseIRI && iri.startsWith(this._baseIRI))\n      iri = iri.substr(this._baseIRI.length);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2;\n    // Depending on the number of variables, keys or reverse index are faster\n    const varCount = !key0 + !key1 + !key2,\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      const entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          const entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              const quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad.\n  // Returns true or false as appropriate.\n  has(quad) {\n    const quads = this.getQuads(quad.subject, quad.predicate, quad.object, quad.graph);\n    return quads.length !== 0;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const quads = [], graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.getQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const quads = n3Store.getQuads(subject, predicate, object, graph);\n      this._filtered = new N3Store(quads, { factory: n3Store._factory });\n    }\n    return this._filtered;\n  }\n  get size() {\n    return this.filtered.size;\n  }\n\n  _read() {\n    for (const quad of this.filtered.getQuads())\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.filtered.getQuads();\n  }\n}\n","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","module.exports = require('events').EventEmitter;\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;"],"sourceRoot":""}