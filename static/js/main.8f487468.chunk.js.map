{"version":3,"sources":["SessionContext.ts","Login.tsx","Profile/WebIdForm.tsx","data.ts","InterestSearch.tsx","Profile/InterestTag.tsx","Profile/Profile.tsx","Profile/index.tsx","App.tsx","reportWebVitals.ts","SessionProvider.tsx","index.tsx"],"names":["SessionContext","createContext","status","webId","Login","useContext","session","setSession","useEffect","a","handleIncomingRedirect","info","isLoggedIn","alert","message","handleLogin","login","oidcIssuer","clientName","getDefaultSession","handleLogout","logout","className","onClick","WebIdForm","onChangeUser","useState","userId","setUserId","handleChangeUserId","e","preventDefault","onSubmit","type","value","onChange","target","wikidataRegex","fetchTurtle","params","uri","options","rest","headers","accept","o","window","fetch","getInterest","id","match","dataUri","getSolidDataset","dataset","data","getThing","label","getStringWithLocale","rdfs","description","schema","comment","abortController","AbortController","searchInterestsFactory","queryGenerator","dataMap","query","abort","length","signal","response","json","name","searchInterestsWikidata","encodeURIComponent","search","map","concepturi","searchInterestsDBPedia","docs","resource","debouncedSearchWikidata","debounce","debouncedSearchDBPedia","InterestSearch","onSelectInterest","setQuery","found","setFound","source","setSource","output","placeholder","current","interest","handleClickInterest","InterestTag","onClose","title","pending","href","disabled","Photo","styled","img","Profile","user","loggedUserId","onAddInterest","onRemoveInterest","interests","Object","values","photo","src","alt","ProfileContainer","setUser","handleAddInterest","keys","includes","auth","updatedUser","addUrl","foaf","topic_interest","changedDataset","setThing","saveSolidDatasetAt","handleRemoveInterest","removeUrl","getTerm","vcard","hasPhoto","interestUris","getUrlAll","preInterests","fromEntries","then","newUserId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionProvider","children","setInfo","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f487468.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport type SessionInfo = {\n  status: 'in' | 'out' | 'pending'\n  webId: string\n}\n\nconst SessionContext = createContext<\n  [SessionInfo, React.Dispatch<React.SetStateAction<SessionInfo>>]\n>([\n  { status: 'out', webId: '' },\n  () => {\n    return\n  },\n])\n\nexport default SessionContext\n","import React, { useEffect, useContext } from 'react'\nimport {\n  login,\n  handleIncomingRedirect,\n  logout,\n  getDefaultSession,\n} from '@inrupt/solid-client-authn-browser'\nimport SessionContext, { SessionInfo } from './SessionContext'\n\nconst Login = () => {\n  const [session, setSession] = useContext(SessionContext)\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const info = await handleIncomingRedirect()\n        if (info && info.isLoggedIn)\n          setSession({ status: 'in', webId: info?.webId ?? '' })\n        else setSession({ status: 'out', webId: '' })\n      } catch (error) {\n        alert('error signing in' + error.message)\n        setSession({ status: 'out', webId: '' })\n      }\n    })()\n  }, [setSession])\n\n  const handleLogin = async () => {\n    setSession({ status: 'pending', webId: '' })\n    try {\n      await login({\n        oidcIssuer: 'https://solidcommunity.net',\n        clientName: 'Solid Interests',\n      })\n      const { info } = getDefaultSession()\n      setSession({ status: 'in', webId: info?.webId ?? '' })\n    } catch (error) {\n      alert(error.message)\n      setSession({ status: 'out', webId: '' })\n    }\n  }\n\n  const handleLogout = async () => {\n    setSession((session: SessionInfo) => ({\n      webId: session.webId,\n      status: 'pending',\n    }))\n    try {\n      await logout()\n      setSession({ status: 'out', webId: '' })\n    } catch (error) {\n      alert(error.message)\n      setSession((session: SessionInfo) => ({\n        webId: session.webId,\n        status: 'in',\n      }))\n    }\n  }\n\n  if (session.status === 'pending') return <>Loading</>\n  if (session.status === 'in')\n    return (\n      <button className=\"button\" onClick={handleLogout}>\n        Log out\n      </button>\n    )\n  return (\n    <button className=\"button\" onClick={handleLogin}>\n      Log in\n    </button>\n  )\n}\n\nexport default Login\n","import React, { FormEvent, useState } from 'react'\n\ninterface Props {\n  webId: string\n  onChangeUser: (webId: string) => void\n}\n\nconst WebIdForm: React.FC<Props> = ({ webId, onChangeUser }) => {\n  const [userId, setUserId] = useState(webId)\n\n  const handleChangeUserId = async (e: FormEvent) => {\n    e.preventDefault()\n    onChangeUser(userId)\n  }\n\n  return (\n    <>\n      <form onSubmit={handleChangeUserId}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={userId}\n          onChange={e => setUserId(e.target.value)}\n        />\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setUserId(webId)}\n        >\n          my webId\n        </button>\n      </form>\n    </>\n  )\n}\n\nexport default WebIdForm\n","import {\n  getSolidDataset,\n  getStringWithLocale,\n  getThing,\n  IriString,\n} from '@inrupt/solid-client'\nimport { rdfs, schema } from 'rdf-namespaces'\nimport { Interest } from './Profile'\n\nconst wikidataRegex =\n  /^https?:\\/\\/(w{3}\\.)?wikidata\\.org\\/entity\\/([A-Z0-9]*)\\/?$/\n\nconst fetchTurtle: typeof window.fetch = (...params) => {\n  const [uri, options, ...rest] = params\n  const headers = { accept: 'text/turtle', ...(options?.headers ?? {}) }\n  const o = { ...options, headers }\n\n  return window.fetch(uri, o, ...rest)\n}\n\nexport const getInterest = async (uri: IriString): Promise<Interest> => {\n  const id = uri.match(wikidataRegex)?.[2] ?? ''\n  const dataUri = id\n    ? `https://www.wikidata.org/wiki/Special:EntityData/${id}.ttl`\n    : uri\n  const dataset = await getSolidDataset(dataUri, { fetch: fetchTurtle })\n  const data = getThing(dataset, uri)\n  if (data) {\n    const label = getStringWithLocale(data, rdfs.label, 'en') ?? ''\n    const description =\n      getStringWithLocale(data, schema.description, 'en') ??\n      getStringWithLocale(data, rdfs.comment, 'en') ??\n      ''\n    return {\n      uri,\n      label,\n      description,\n    }\n  }\n  return {\n    uri,\n    label: '',\n    description: '',\n  }\n}\n\nlet abortController = new AbortController()\n\nconst searchInterestsFactory =\n  <Body>(\n    queryGenerator: (query: string) => string,\n    dataMap: (body: Body) => Interest[],\n  ) =>\n  async (query: string) => {\n    abortController.abort() // Cancel the previous request\n    abortController = new AbortController()\n\n    if (query.length === 0) {\n      return []\n    }\n\n    try {\n      let response = await fetch(queryGenerator(query), {\n        signal: abortController.signal,\n      })\n      const data = (await response.json()) as Body\n\n      return dataMap(data)\n    } catch (ex) {\n      if (ex.name === 'AbortError') {\n        return // Continuation logic has already been skipped, so return normally\n      }\n\n      throw ex\n    }\n  }\n\ntype WikidataResponse = {\n  search: { concepturi: string; description: string; label: string }[]\n}\n\nexport const searchInterestsWikidata = searchInterestsFactory<WikidataResponse>(\n  query =>\n    `https://www.wikidata.org/w/api.php?action=wbsearchentities&search=${encodeURIComponent(\n      query,\n    )}&format=json&errorformat=plaintext&language=en&uselang=en&type=item&origin=*`,\n  data =>\n    data.search.map(({ concepturi: uri, description, label }) => ({\n      uri,\n      description,\n      label,\n    })),\n)\n\ntype DBPediaResponse = {\n  docs: { resource: [string]; label: [string] }[]\n}\n\nexport const searchInterestsDBPedia = searchInterestsFactory<DBPediaResponse>(\n  query =>\n    `https://lookup.dbpedia.org/api/prefix?query=${encodeURIComponent(\n      query,\n    )}&format=json$`,\n  data =>\n    data.docs.map(({ resource: [uri], label: [label] }) => ({\n      uri,\n      description: '...',\n      label,\n    })),\n)\n","import React, { useEffect, useState } from 'react'\nimport debounce from 'debounce-promise'\nimport { searchInterestsWikidata, searchInterestsDBPedia } from './data'\nimport { Interest } from './Profile'\n\nconst debouncedSearchWikidata = debounce(searchInterestsWikidata, 30)\nconst debouncedSearchDBPedia = debounce(searchInterestsDBPedia, 30)\n\ninterface Props {\n  onSelectInterest: (interest: Interest) => void\n}\n\nconst InterestSearch: React.FC<Props> = ({ onSelectInterest }) => {\n  const [query, setQuery] = useState('')\n  const [found, setFound] = useState<Interest[]>([])\n  const [source, setSource] = useState<'dbp' | 'wd'>('wd')\n\n  useEffect(() => {\n    ;(async () => {\n      const output = await (source === 'wd'\n        ? debouncedSearchWikidata\n        : debouncedSearchDBPedia)(query)\n      if (output) {\n        setFound(output)\n      }\n    })()\n  }, [query, source])\n\n  const handleClickInterest = (interest: Interest) => {\n    setQuery('')\n    onSelectInterest(interest)\n  }\n\n  const handleSwitchSource = () => {\n    setSource(current => (current === 'wd' ? 'dbp' : 'wd'))\n  }\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"add interest\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button className=\"button\" onClick={handleSwitchSource}>\n        {source === 'wd' ? 'wikidata' : 'dbpedia'}\n      </button>\n      <ul>\n        {found.map(interest => (\n          <li key={interest.uri} onClick={() => handleClickInterest(interest)}>\n            {interest.label}: {interest.description}\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default InterestSearch\n","import React from 'react'\nimport { Interest } from '.'\n\ninterface Props {\n  interest: Interest\n  onClose: () => void\n}\n\nconst InterestTag: React.FC<Props> = ({ interest, onClose }) => (\n  <div className=\"tags has-addons\">\n    <a\n      title={interest.description}\n      className={`tag is-link${interest.pending ? ' is-light' : ''}`}\n      href={interest.uri}\n    >\n      {interest.label}\n    </a>\n    <button\n      disabled={!!interest.pending}\n      onClick={() => onClose()}\n      className=\"tag is-delete\"\n    ></button>\n  </div>\n)\n\nexport default InterestTag\n","import React from 'react'\nimport { Interest, User } from '.'\nimport styled from 'styled-components'\nimport InterestSearch from '../InterestSearch'\nimport InterestTag from './InterestTag'\nimport { IriString } from '@inrupt/solid-client'\n\ninterface Props {\n  user: User\n  loggedUserId: IriString\n  onAddInterest: (interest: Interest) => void\n  onRemoveInterest: (interest: Interest) => void\n}\n\nconst Photo = styled.img`\n  && {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst Profile: React.FC<Props> = ({\n  user,\n  loggedUserId,\n  onAddInterest,\n  onRemoveInterest,\n}) => {\n  const interests = Object.values(user.interests)\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              {user.photo && (\n                <Photo src={user.photo} alt={`Photo of ${user.name}`} />\n              )}\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{user.name}</p>\n            <p className=\"subtitle is-6\">\n              <a href={user.webId}>{user.webId}</a>\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {interests.length > 0 ? (\n            <div className=\"field is-grouped is-grouped-multiline\">\n              {interests.map(interest => (\n                <div key={interest.uri} className=\"control\">\n                  <InterestTag\n                    interest={interest}\n                    onClose={() => onRemoveInterest(interest)}\n                  />\n                </div>\n              ))}\n            </div>\n          ) : (\n            'no interests'\n          )}\n          {loggedUserId === user.webId && (\n            <InterestSearch onSelectInterest={onAddInterest} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React, { useEffect, useState } from 'react'\nimport WebIdForm from './WebIdForm'\nimport {\n  addUrl,\n  getSolidDataset,\n  getTerm,\n  getThing,\n  getUrlAll,\n  IriString,\n  removeUrl,\n  saveSolidDatasetAt,\n  setThing,\n} from '@inrupt/solid-client'\n// import { fetch } from '@inrupt/solid-client-authn-browser'\nimport * as auth from '@inrupt/solid-client-authn-browser'\nimport Profile from './Profile'\nimport { foaf, vcard } from 'rdf-namespaces'\nimport { getInterest } from '../data'\n\ninterface Props {\n  webId: string\n}\n\nexport type Interest = {\n  label: string\n  uri: IriString\n  description: string\n  pending?: boolean\n}\n\nexport type User = {\n  webId: string\n  name: string\n  photo: string\n  interests: { [uri: string]: Interest }\n}\n\nconst ProfileContainer: React.FC<Props> = ({ webId }) => {\n  const [userId, setUserId] = useState(webId)\n  const [user, setUser] = useState<User>({\n    webId: '',\n    name: '',\n    photo: '',\n    interests: {},\n  })\n\n  const handleChangeUser = (newUserId: string) => {\n    setUserId(newUserId)\n  }\n\n  const handleAddInterest = async (interest: Interest) => {\n    if (!Object.keys(user.interests).includes(interest.uri)) {\n      setUser(user => ({\n        ...user,\n        interests: {\n          ...user.interests,\n          ...{ [interest.uri]: { ...interest, pending: true } },\n        },\n      }))\n      const dataset = await getSolidDataset(userId, { fetch: auth.fetch })\n      const user = getThing(dataset, userId)\n      if (user) {\n        const updatedUser = addUrl(user, foaf.topic_interest, interest.uri)\n        const changedDataset = setThing(dataset, updatedUser)\n        await saveSolidDatasetAt(userId, changedDataset, { fetch: auth.fetch })\n      }\n      setUser(user => ({\n        ...user,\n        interests: {\n          ...user.interests,\n          ...{ [interest.uri]: { ...interest } },\n        },\n      }))\n    } else alert(`${interest.label} already added`)\n  }\n\n  const handleRemoveInterest = async (interest: Interest) => {\n    setUser(user => ({\n      ...user,\n      interests: {\n        ...user.interests,\n        ...{ [interest.uri]: { ...interest, pending: true } },\n      },\n    }))\n    const dataset = await getSolidDataset(userId, { fetch: auth.fetch })\n    const user = getThing(dataset, userId)\n    if (user) {\n      const updatedUser = removeUrl(user, foaf.topic_interest, interest.uri)\n      const changedDataset = setThing(dataset, updatedUser)\n      await saveSolidDatasetAt(userId, changedDataset, { fetch: auth.fetch })\n    }\n    setUser(user => {\n      const { [interest.uri]: _interest, ...interests } = user.interests\n      return {\n        ...user,\n        interests,\n      }\n    })\n  }\n\n  // fetch the new user when userId changes\n  useEffect(() => {\n    setUser({\n      webId: '',\n      name: '',\n      photo: '',\n      interests: {},\n    })\n    ;(async () => {\n      const dataset = await getSolidDataset(userId, { fetch: auth.fetch })\n      const user = getThing(dataset, userId)\n      if (user) {\n        const name = getTerm(user, foaf.name)?.value ?? ''\n        const photo =\n          getTerm(user, foaf.img)?.value ??\n          getTerm(user, vcard.hasPhoto)?.value ??\n          ''\n        const interestUris = getUrlAll(user, foaf.topic_interest)\n        const preInterests = Object.fromEntries(\n          interestUris.map(uri => [\n            uri,\n            { uri, label: '...', description: '', pending: true },\n          ]),\n        )\n        setUser({ name, photo, webId: userId, interests: preInterests })\n\n        for (const uri of interestUris) {\n          getInterest(uri).then(interest =>\n            setUser(user => ({\n              ...user,\n              interests: {\n                ...user.interests,\n                ...{ [interest.uri]: { ...interest } },\n              },\n            })),\n          )\n        }\n      }\n    })()\n  }, [userId, webId])\n\n  return (\n    <>\n      <WebIdForm webId={webId} onChangeUser={handleChangeUser} />\n      {user.webId ? (\n        <Profile\n          onAddInterest={handleAddInterest}\n          onRemoveInterest={handleRemoveInterest}\n          user={user}\n          loggedUserId={webId}\n        />\n      ) : (\n        'loading profile...'\n      )}\n    </>\n  )\n}\n\nexport default ProfileContainer\n","import React, { useContext } from 'react'\nimport Login from './Login'\nimport Profile from './Profile'\nimport SessionContext from './SessionContext'\n\nfunction App() {\n  const [info] = useContext(SessionContext)\n  return (\n    <>\n      <Login />\n      {info.status === 'in' && <Profile webId={info.webId} />}\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React, { ReactNode, useState } from 'react'\nimport SessionContext, { SessionInfo } from './SessionContext'\ninterface Props {\n  children: ReactNode\n}\n\nconst SessionProvider: React.FC<Props> = ({ children }) => {\n  const [info, setInfo] = useState<SessionInfo>({\n    status: 'pending',\n    webId: '',\n  })\n  return (\n    <SessionContext.Provider value={[info, setInfo]}>\n      {children}\n    </SessionContext.Provider>\n  )\n}\n\nexport default SessionProvider\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport SessionProvider from './SessionProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionProvider>\n      <App />\n    </SessionProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}