{"version":3,"sources":["SessionContext.ts","LoginPrompt.tsx","Login.tsx","Profile/WebIdForm.tsx","data.ts","InterestSearch.tsx","Profile/InterestTag.tsx","Profile/Profile.tsx","Profile/index.tsx","App.tsx","reportWebVitals.ts","SessionProvider.tsx","index.tsx"],"names":["SessionContext","createContext","status","webId","LoginPrompt","onLogin","props","useState","promptOpen","setPromptOpen","localStorage","getItem","idp","setIdp","className","onSubmit","e","preventDefault","setItem","id","type","value","onChange","newValue","currentTarget","placeholder","onClick","Login","useContext","session","setSession","useEffect","a","handleIncomingRedirect","info","isLoggedIn","alert","message","handleLogin","login","oidcIssuer","clientName","getDefaultSession","handleLogout","logout","WebIdForm","onChangeUser","userId","setUserId","handleChangeUserId","target","wikidataRegex","fetchTurtle","params","uri","options","rest","headers","accept","o","window","fetch","getInterest","match","dataUri","getSolidDataset","dataset","data","getThing","label","getStringWithLocale","rdfs","description","schema","comment","abortController","AbortController","searchInterestsFactory","queryGenerator","dataMap","query","abort","length","signal","response","json","name","searchInterestsWikidata","encodeURIComponent","search","map","concepturi","searchInterestsDBPedia","docs","resource","debouncedSearchWikidata","debounce","debouncedSearchDBPedia","InterestSearch","onSelectInterest","setQuery","found","setFound","source","setSource","output","current","interest","handleClickInterest","InterestTag","onClose","title","pending","href","disabled","Photo","styled","img","Profile","user","loggedUserId","onAddInterest","onRemoveInterest","interests","Object","values","photo","src","alt","ProfileContainer","setUser","handleAddInterest","keys","includes","auth","updatedUser","addUrl","foaf","topic_interest","changedDataset","setThing","saveSolidDatasetAt","handleRemoveInterest","removeUrl","getTerm","vcard","hasPhoto","interestUris","getUrlAll","preInterests","fromEntries","then","newUserId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionProvider","children","setInfo","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAgBeA,EATQC,wBAErB,CACA,CAAEC,OAAQ,MAAOC,MAAO,IACxB,e,sBC0DaC,EA/DsB,SAAC,GAAkC,IAAD,EAA/BC,EAA+B,EAA/BA,QAAYC,EAAmB,6BACjCC,oBAAS,GADwB,mBAC9DC,EAD8D,KAClDC,EADkD,OAE/CF,mBAAQ,UAC5BG,aAAaC,QAAQ,cADO,QACG,8BAHoC,mBAE9DC,EAF8D,KAEzDC,EAFyD,KAkBrE,OAAKL,EAgBH,sBAAKM,UAAU,OAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,mBAAGA,UAAU,oBAAb,mDAEF,qBAAKA,UAAU,eAAf,SACE,uBAAMC,SAjC6B,SAAAC,GACvCA,EAAEC,iBACFP,aAAaQ,QAAQ,MAAON,GAC5BP,EAAQO,IA8BJ,UACE,qBAAKE,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACE,uBACEK,GAAG,MACHL,UAAU,QACVM,KAAK,MACLC,MAAOT,EACPU,SAnCQ,SAACN,GACrBA,EAAEC,iBACF,IAAMM,EAAWP,EAAEQ,cAAcH,MACjCR,EAAOU,IAiCKE,YAAY,iCAIlB,qBAAKX,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACE,uBAAOM,KAAK,SAASC,MAAM,UAAUP,UAAU,+BAlCvD,kDACMR,GADN,IAEEQ,UAAU,SACVY,QAAS,SAAAV,GACPA,EAAEC,iBACFR,GAAc,IALlB,qBC2CSkB,EA3DD,WAAO,IAAD,EACYC,qBAAW5B,GADvB,mBACX6B,EADW,KACFC,EADE,KAGlBC,qBAAU,WACP,sBAAC,8BAAAC,EAAA,+EAEqBC,mCAFrB,QAEQC,EAFR,SAGcA,EAAKC,WACfL,EAAW,CAAE5B,OAAQ,KAAMC,MAAK,iBAAE+B,QAAF,IAAEA,OAAF,EAAEA,EAAM/B,aAAR,QAAiB,KAC9C2B,EAAW,CAAE5B,OAAQ,MAAOC,MAAO,KAL1C,gDAOEiC,MAAM,mBAAqB,KAAMC,SACjCP,EAAW,CAAE5B,OAAQ,MAAOC,MAAO,KARrC,wDAAD,KAWA,CAAC2B,IAEJ,IAAMQ,EAAW,uCAAG,WAAO1B,GAAP,mBAAAoB,EAAA,6DAClBF,EAAW,CAAE5B,OAAQ,UAAWC,MAAO,KADrB,kBAGVoC,gBAAM,CACVC,WAAY5B,EACZ6B,WAAY,oBALE,SAOCC,8BAATR,EAPQ,EAORA,KACRJ,EAAW,CAAE5B,OAAQ,KAAMC,MAAK,iBAAE+B,QAAF,IAAEA,OAAF,EAAEA,EAAM/B,aAAR,QAAiB,KARjC,gDAUhBiC,MAAM,KAAMC,SACZP,EAAW,CAAE5B,OAAQ,MAAOC,MAAO,KAXnB,yDAAH,sDAeXwC,EAAY,uCAAG,sBAAAX,EAAA,6DACnBF,GAAW,SAACD,GAAD,MAA2B,CACpC1B,MAAO0B,EAAQ1B,MACfD,OAAQ,cAHS,kBAMX0C,mBANW,OAOjBd,EAAW,CAAE5B,OAAQ,MAAOC,MAAO,KAPlB,gDASjBiC,MAAM,KAAMC,SACZP,GAAW,SAACD,GAAD,MAA2B,CACpC1B,MAAO0B,EAAQ1B,MACfD,OAAQ,SAZO,yDAAH,qDAiBlB,MAAuB,YAAnB2B,EAAQ3B,OAA6B,+CAClB,OAAnB2B,EAAQ3B,OAER,wBAAQY,UAAU,SAASY,QAASiB,EAApC,qBAIG,cAAC,EAAD,CAAatC,QAASiC,K,uBC9BhBO,EA7BoB,SAAC,GAA6B,IAA3B1C,EAA0B,EAA1BA,MAAO2C,EAAmB,EAAnBA,aAAmB,EAClCvC,mBAASJ,GADyB,mBACvD4C,EADuD,KAC/CC,EAD+C,KAGxDC,EAAkB,uCAAG,WAAOjC,GAAP,SAAAgB,EAAA,sDACzBhB,EAAEC,iBACF6B,EAAaC,GAFY,2CAAH,sDAKxB,OACE,mCACE,uBAAMhC,SAAUkC,EAAhB,UACE,uBACEnC,UAAU,QACVM,KAAK,OACLC,MAAO0B,EACPzB,SAAU,SAAAN,GAAC,OAAIgC,EAAUhC,EAAEkC,OAAO7B,UAEpC,wBACEP,UAAU,SACVM,KAAK,SACLM,QAAS,kBAAMsB,EAAU7C,IAH3B,4B,wDCfFgD,EACJ,8DAEIC,EAAmC,WAAe,IAAC,IAAD,uBAAXC,EAAW,yBAAXA,EAAW,oBAC/CC,EAAyBD,EADsB,GAC1CE,EAAoBF,EADsB,GAC9BG,EAAQH,EADsB,SAEhDI,EAAO,aAAKC,OAAQ,eAAb,iBAAgCH,QAAhC,IAAgCA,OAAhC,EAAgCA,EAASE,eAAzC,QAAoD,IAC3DE,EAAC,2BAAQJ,GAAR,IAAiBE,YAExB,OAAO,EAAAG,QAAOC,MAAP,SAAaP,EAAKK,GAAlB,mBAAwBH,MAGpBM,EAAW,uCAAG,WAAOR,GAAP,mCAAAtB,EAAA,6DACnBb,EADmB,oBACdmC,EAAIS,MAAMZ,UADI,aACd,EAA2B,UADb,QACmB,GACtCa,EAAU7C,EAAE,2DACsCA,EADtC,QAEdmC,EAJqB,SAKHW,YAAgBD,EAAS,CAAEH,MAAOT,IAL/B,UAKnBc,EALmB,SAMnBC,EAAOC,YAASF,EAASZ,IANN,wBAQjBe,EARiB,UAQTC,YAAoBH,EAAMI,IAAKF,MAAO,aAR7B,QAQsC,GACvDG,EATiB,oBAUrBF,YAAoBH,EAAMM,IAAOD,YAAa,aAVzB,QAWrBF,YAAoBH,EAAMI,IAAKG,QAAS,aAXnB,QAYrB,GAZqB,kBAahB,CACLpB,MACAe,QACAG,gBAhBqB,iCAmBlB,CACLlB,MACAe,MAAO,GACPG,YAAa,KAtBU,4CAAH,sDA0BpBG,EAAkB,IAAIC,gBAEpBC,EACJ,SACEC,EACAC,GAFF,8CAIA,WAAOC,GAAP,iBAAAhD,EAAA,yDACE2C,EAAgBM,QAChBN,EAAkB,IAAIC,gBAED,IAAjBI,EAAME,OAJZ,yCAKW,IALX,gCASyBrB,MAAMiB,EAAeE,GAAQ,CAChDG,OAAQR,EAAgBQ,SAV9B,cASQC,EATR,iBAYwBA,EAASC,OAZjC,eAYUlB,EAZV,yBAcWY,EAAQZ,IAdnB,qCAgBoB,eAAZ,KAAGmB,KAhBX,wHAJA,uDAgCWC,EAA0BV,GACrC,SAAAG,GAAK,kFACkEQ,mBACnER,GAFC,mFAIL,SAAAb,GAAI,OACFA,EAAKsB,OAAOC,KAAI,kBAA8C,CAC5DpC,IADc,EAAGqC,WAEjBnB,YAFc,EAAoBA,YAGlCH,MAHc,EAAiCA,aAWxCuB,EAAyBf,GACpC,SAAAG,GAAK,4DAC4CQ,mBAC7CR,GAFC,oBAIL,SAAAb,GAAI,OACFA,EAAK0B,KAAKH,KAAI,kBAA0C,CACtDpC,IADY,cAAGwC,SAAH,MAEZtB,YAAa,MACbH,MAHY,cAAoBA,MAApB,aCnGZ0B,EAA0BC,IAAST,EAAyB,IAC5DU,EAAyBD,IAASJ,EAAwB,IAsDjDM,EAhDyB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAAuB,EACtC5F,mBAAS,IAD6B,mBACzDyE,EADyD,KAClDoB,EADkD,OAEtC7F,mBAAqB,IAFiB,mBAEzD8F,EAFyD,KAElDC,EAFkD,OAGpC/F,mBAAuB,MAHa,mBAGzDgG,EAHyD,KAGjDC,EAHiD,KAKhEzE,qBAAU,WACP,sBAAC,4BAAAC,EAAA,uEACiC,OAAXuE,EAClBR,EACAE,GAAwBjB,GAH5B,QACMyB,EADN,SAKEH,EAASG,GALX,0CAAD,KAQA,CAACzB,EAAOuB,IAWX,OACE,qCACE,uBACEnF,KAAK,OACLN,UAAU,QACVW,YAAY,eACZJ,MAAO2D,EACP1D,SAAU,SAAAN,GAAC,OAAIoF,EAASpF,EAAEkC,OAAO7B,UAEnC,wBAAQP,UAAU,SAASY,QAbJ,WACzB8E,GAAU,SAAAE,GAAO,MAAiB,OAAZA,EAAmB,MAAQ,SAY/C,SACc,OAAXH,EAAkB,WAAa,YAElC,6BACGF,EAAMX,KAAI,SAAAiB,GAAQ,OACjB,qBAAuBjF,QAAS,kBAvBZ,SAACiF,GAC3BP,EAAS,IACTD,EAAiBQ,GAqB2BC,CAAoBD,IAA1D,UACGA,EAAStC,MADZ,KACqBsC,EAASnC,cADrBmC,EAASrD,cC1BbuD,EAjBsB,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAUG,EAAb,EAAaA,QAAb,OACnC,sBAAKhG,UAAU,kBAAf,UACE,mBACEiG,MAAOJ,EAASnC,YAChB1D,UAAS,qBAAgB6F,EAASK,QAAU,YAAc,IAC1DC,KAAMN,EAASrD,IAHjB,SAKGqD,EAAStC,QAEZ,wBACE6C,WAAYP,EAASK,QACrBtF,QAAS,kBAAMoF,KACfhG,UAAU,sBCNVqG,EAAQC,IAAOC,IAAV,sGA0DIC,EAlDkB,SAAC,GAK3B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,cACAC,EACI,EADJA,iBAEMC,EAAYC,OAAOC,OAAON,EAAKI,WACrC,OACE,qBAAK7G,UAAU,OAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACGyG,EAAKO,OACJ,cAACX,EAAD,CAAOY,IAAKR,EAAKO,MAAOE,IAAG,mBAAcT,EAAKjC,YAIpD,sBAAKxE,UAAU,gBAAf,UACE,mBAAGA,UAAU,aAAb,SAA2ByG,EAAKjC,OAChC,mBAAGxE,UAAU,gBAAb,SACE,mBAAGmG,KAAMM,EAAKpH,MAAd,SAAsBoH,EAAKpH,gBAKjC,sBAAKW,UAAU,UAAf,UACG6G,EAAUzC,OAAS,EAClB,qBAAKpE,UAAU,wCAAf,SACG6G,EAAUjC,KAAI,SAAAiB,GAAQ,OACrB,qBAAwB7F,UAAU,UAAlC,SACE,cAAC,EAAD,CACE6F,SAAUA,EACVG,QAAS,kBAAMY,EAAiBf,OAH1BA,EAASrD,UASvB,eAEDkE,IAAiBD,EAAKpH,OACrB,cAAC,EAAD,CAAgBgG,iBAAkBsB,aC8F/BQ,EAzH2B,SAAC,GAAe,IAAb9H,EAAY,EAAZA,MAAY,EAC3BI,mBAASJ,GADkB,mBAChD4C,EADgD,KACxCC,EADwC,OAE/BzC,mBAAe,CACrCJ,MAAO,GACPmF,KAAM,GACNwC,MAAO,GACPH,UAAW,KAN0C,mBAEhDJ,EAFgD,KAE1CW,EAF0C,KAajDC,EAAiB,uCAAG,WAAOxB,GAAP,qBAAA3E,EAAA,yDACnB4F,OAAOQ,KAAKb,EAAKI,WAAWU,SAAS1B,EAASrD,KAD3B,wBAEtB4E,GAAQ,SAAAX,GAAI,kCACPA,GADO,IAEVI,UAAU,2BACLJ,EAAKI,WADD,eAEDhB,EAASrD,IAFR,2BAEmBqD,GAFnB,IAE6BK,SAAS,WAN3B,SASA/C,YAAgBlB,EAAQ,CAAEc,MAAOyE,UATjC,UAShBpE,EATgB,SAUhBqD,EAAOnD,YAASF,EAASnB,IAVT,wBAYdwF,EAAcC,YAAOjB,EAAMkB,IAAKC,eAAgB/B,EAASrD,KACzDqF,EAAiBC,YAAS1E,EAASqE,GAbrB,UAcdM,YAAmB9F,EAAQ4F,EAAgB,CAAE9E,MAAOyE,UAdtC,QAgBtBJ,GAAQ,SAAAX,GAAI,kCACPA,GADO,IAEVI,UAAU,2BACLJ,EAAKI,WADD,eAEDhB,EAASrD,IAFR,eAEmBqD,UApBR,wBAuBjBvE,MAAM,GAAD,OAAIuE,EAAStC,MAAb,mBAvBY,4CAAH,sDA0BjByE,EAAoB,uCAAG,WAAOnC,GAAP,qBAAA3E,EAAA,6DAC3BkG,GAAQ,SAAAX,GAAI,kCACPA,GADO,IAEVI,UAAU,2BACLJ,EAAKI,WADD,eAEDhB,EAASrD,IAFR,2BAEmBqD,GAFnB,IAE6BK,SAAS,WALtB,SAQL/C,YAAgBlB,EAAQ,CAAEc,MAAOyE,UAR5B,UAQrBpE,EARqB,SASrBqD,EAAOnD,YAASF,EAASnB,IATJ,wBAWnBwF,EAAcQ,YAAUxB,EAAMkB,IAAKC,eAAgB/B,EAASrD,KAC5DqF,EAAiBC,YAAS1E,EAASqE,GAZhB,UAanBM,YAAmB9F,EAAQ4F,EAAgB,CAAE9E,MAAOyE,UAbjC,QAe3BJ,GAAQ,SAAAX,GAAS,IAAD,EACsCA,EAAKI,UAD3C,EACLhB,EAASrD,IAAoBqE,GADxB,kCAEd,OAAO,2BACFJ,GADL,IAEEI,iBAnBuB,4CAAH,sDAiE1B,OAxCA5F,qBAAU,WACRmG,EAAQ,CACN/H,MAAO,GACPmF,KAAM,GACNwC,MAAO,GACPH,UAAW,KAEZ,sBAAC,wDAAA3F,EAAA,sEACsBiC,YAAgBlB,EAAQ,CAAEc,MAAOyE,UADvD,OAGA,GAFMpE,EADN,OAEMqD,EAAOnD,YAASF,EAASnB,GACrB,CACFuC,EADE,oBACK0D,YAAQzB,EAAMkB,IAAKnD,aADxB,aACK,EAA0BjE,aAD/B,QACwC,GAC1CyG,EAFE,8BAGNkB,YAAQzB,EAAMkB,IAAKpB,YAHb,aAGN,EAAyBhG,aAHnB,kBAIN2H,YAAQzB,EAAM0B,IAAMC,iBAJd,aAIN,EAA+B7H,aAJzB,QAKN,GACI8H,EAAeC,YAAU7B,EAAMkB,IAAKC,gBACpCW,EAAezB,OAAO0B,YAC1BH,EAAazD,KAAI,SAAApC,GAAG,MAAI,CACtBA,EACA,CAAEA,MAAKe,MAAO,MAAOG,YAAa,GAAIwC,SAAS,QAGnDkB,EAAQ,CAAE5C,OAAMwC,QAAO3H,MAAO4C,EAAQ4E,UAAW0B,IAbzC,cAeUF,GAfV,IAeR,2BAAW7F,EAAqB,QAC9BQ,EAAYR,GAAKiG,MAAK,SAAA5C,GAAQ,OAC5BuB,GAAQ,SAAAX,GAAI,kCACPA,GADO,IAEVI,UAAU,2BACLJ,EAAKI,WADD,eAEDhB,EAASrD,IAFR,eAEmBqD,aArB1B,+BAHV,0CAAD,KA+BA,CAAC5D,EAAQ5C,IAGV,qCACE,cAAC,EAAD,CAAWA,MAAOA,EAAO2C,aAjGJ,SAAC0G,GACxBxG,EAAUwG,MAiGPjC,EAAKpH,MACJ,cAAC,EAAD,CACEsH,cAAeU,EACfT,iBAAkBoB,EAClBvB,KAAMA,EACNC,aAAcrH,IAGhB,yBCzIOsJ,MAVf,WAAgB,IAAD,EACE7H,qBAAW5B,GAAnBkC,EADM,oBAEb,OACE,qCACE,cAAC,EAAD,IACiB,OAAhBA,EAAKhC,QAAmB,cAAC,EAAD,CAASC,MAAO+B,EAAK/B,YCIrCuJ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCSCO,EAZ0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACjC5J,mBAAsB,CAC5CL,OAAQ,UACRC,MAAO,KAHgD,mBAClD+B,EADkD,KAC5CkI,EAD4C,KAKzD,OACE,cAAC,EAAeC,SAAhB,CAAyBhJ,MAAO,CAACa,EAAMkI,GAAvC,SACGD,KCNPG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BhB,K","file":"static/js/main.0b2d2fa0.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport type SessionInfo = {\n  status: 'in' | 'out' | 'pending'\n  webId: string\n}\n\nconst SessionContext = createContext<\n  [SessionInfo, React.Dispatch<React.SetStateAction<SessionInfo>>]\n>([\n  { status: 'out', webId: '' },\n  () => {\n    return\n  },\n])\n\nexport default SessionContext\n","import React, { useState } from 'react'\n\ninterface Props {\n  onLogin: (oidcIssuer: string) => void\n}\n\nconst LoginPrompt: React.FC<Props> = ({ onLogin, ...props }: Props) => {\n  const [promptOpen, setPromptOpen] = useState(false)\n  const [idp, setIdp] = useState(\n    localStorage.getItem('idp') ?? 'https://solidcommunity.net',\n  )\n\n  const onSubmit: React.FormEventHandler = e => {\n    e.preventDefault()\n    localStorage.setItem('idp', idp)\n    onLogin(idp)\n  }\n\n  const onChangeInput = (e: React.FormEvent<HTMLInputElement>) => {\n    e.preventDefault()\n    const newValue = e.currentTarget.value\n    setIdp(newValue)\n  }\n\n  if (!promptOpen) {\n    return (\n      <button\n        {...props}\n        className=\"button\"\n        onClick={e => {\n          e.preventDefault()\n          setPromptOpen(true)\n        }}\n      >\n        Login\n      </button>\n    )\n  }\n\n  return (\n    <div className=\"card\">\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">Select your Solid identity provider</p>\n      </header>\n      <div className=\"card-content\">\n        <form onSubmit={onSubmit}>\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                id=\"idp\"\n                className=\"input\"\n                type=\"url\"\n                value={idp}\n                onChange={onChangeInput}\n                placeholder=\"Where is your Solid Pod?\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <input type=\"submit\" value=\"Connect\" className=\"button is-link\" />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPrompt\n","import React, { useEffect, useContext } from 'react'\nimport {\n  login,\n  handleIncomingRedirect,\n  logout,\n  getDefaultSession,\n} from '@inrupt/solid-client-authn-browser'\nimport SessionContext, { SessionInfo } from './SessionContext'\nimport LoginPrompt from './LoginPrompt'\n\nconst Login = () => {\n  const [session, setSession] = useContext(SessionContext)\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const info = await handleIncomingRedirect()\n        if (info && info.isLoggedIn)\n          setSession({ status: 'in', webId: info?.webId ?? '' })\n        else setSession({ status: 'out', webId: '' })\n      } catch (error) {\n        alert('error signing in' + error.message)\n        setSession({ status: 'out', webId: '' })\n      }\n    })()\n  }, [setSession])\n\n  const handleLogin = async (idp: string) => {\n    setSession({ status: 'pending', webId: '' })\n    try {\n      await login({\n        oidcIssuer: idp,\n        clientName: 'Solid Interests',\n      })\n      const { info } = getDefaultSession()\n      setSession({ status: 'in', webId: info?.webId ?? '' })\n    } catch (error) {\n      alert(error.message)\n      setSession({ status: 'out', webId: '' })\n    }\n  }\n\n  const handleLogout = async () => {\n    setSession((session: SessionInfo) => ({\n      webId: session.webId,\n      status: 'pending',\n    }))\n    try {\n      await logout()\n      setSession({ status: 'out', webId: '' })\n    } catch (error) {\n      alert(error.message)\n      setSession((session: SessionInfo) => ({\n        webId: session.webId,\n        status: 'in',\n      }))\n    }\n  }\n\n  if (session.status === 'pending') return <>Loading</>\n  if (session.status === 'in')\n    return (\n      <button className=\"button\" onClick={handleLogout}>\n        Log out\n      </button>\n    )\n  return <LoginPrompt onLogin={handleLogin} />\n}\n\nexport default Login\n","import React, { FormEvent, useState } from 'react'\n\ninterface Props {\n  webId: string\n  onChangeUser: (webId: string) => void\n}\n\nconst WebIdForm: React.FC<Props> = ({ webId, onChangeUser }) => {\n  const [userId, setUserId] = useState(webId)\n\n  const handleChangeUserId = async (e: FormEvent) => {\n    e.preventDefault()\n    onChangeUser(userId)\n  }\n\n  return (\n    <>\n      <form onSubmit={handleChangeUserId}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={userId}\n          onChange={e => setUserId(e.target.value)}\n        />\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setUserId(webId)}\n        >\n          my webId\n        </button>\n      </form>\n    </>\n  )\n}\n\nexport default WebIdForm\n","import {\n  getSolidDataset,\n  getStringWithLocale,\n  getThing,\n  IriString,\n} from '@inrupt/solid-client'\nimport { rdfs, schema } from 'rdf-namespaces'\nimport { Interest } from './Profile'\n\nconst wikidataRegex =\n  /^https?:\\/\\/(w{3}\\.)?wikidata\\.org\\/entity\\/([A-Z0-9]*)\\/?$/\n\nconst fetchTurtle: typeof window.fetch = (...params) => {\n  const [uri, options, ...rest] = params\n  const headers = { accept: 'text/turtle', ...(options?.headers ?? {}) }\n  const o = { ...options, headers }\n\n  return window.fetch(uri, o, ...rest)\n}\n\nexport const getInterest = async (uri: IriString): Promise<Interest> => {\n  const id = uri.match(wikidataRegex)?.[2] ?? ''\n  const dataUri = id\n    ? `https://www.wikidata.org/wiki/Special:EntityData/${id}.ttl`\n    : uri\n  const dataset = await getSolidDataset(dataUri, { fetch: fetchTurtle })\n  const data = getThing(dataset, uri)\n  if (data) {\n    const label = getStringWithLocale(data, rdfs.label, 'en') ?? ''\n    const description =\n      getStringWithLocale(data, schema.description, 'en') ??\n      getStringWithLocale(data, rdfs.comment, 'en') ??\n      ''\n    return {\n      uri,\n      label,\n      description,\n    }\n  }\n  return {\n    uri,\n    label: '',\n    description: '',\n  }\n}\n\nlet abortController = new AbortController()\n\nconst searchInterestsFactory =\n  <Body>(\n    queryGenerator: (query: string) => string,\n    dataMap: (body: Body) => Interest[],\n  ) =>\n  async (query: string) => {\n    abortController.abort() // Cancel the previous request\n    abortController = new AbortController()\n\n    if (query.length === 0) {\n      return []\n    }\n\n    try {\n      let response = await fetch(queryGenerator(query), {\n        signal: abortController.signal,\n      })\n      const data = (await response.json()) as Body\n\n      return dataMap(data)\n    } catch (ex) {\n      if (ex.name === 'AbortError') {\n        return // Continuation logic has already been skipped, so return normally\n      }\n\n      throw ex\n    }\n  }\n\ntype WikidataResponse = {\n  search: { concepturi: string; description: string; label: string }[]\n}\n\nexport const searchInterestsWikidata = searchInterestsFactory<WikidataResponse>(\n  query =>\n    `https://www.wikidata.org/w/api.php?action=wbsearchentities&search=${encodeURIComponent(\n      query,\n    )}&format=json&errorformat=plaintext&language=en&uselang=en&type=item&origin=*`,\n  data =>\n    data.search.map(({ concepturi: uri, description, label }) => ({\n      uri,\n      description,\n      label,\n    })),\n)\n\ntype DBPediaResponse = {\n  docs: { resource: [string]; label: [string] }[]\n}\n\nexport const searchInterestsDBPedia = searchInterestsFactory<DBPediaResponse>(\n  query =>\n    `https://lookup.dbpedia.org/api/prefix?query=${encodeURIComponent(\n      query,\n    )}&format=json$`,\n  data =>\n    data.docs.map(({ resource: [uri], label: [label] }) => ({\n      uri,\n      description: '...',\n      label,\n    })),\n)\n","import React, { useEffect, useState } from 'react'\nimport debounce from 'debounce-promise'\nimport { searchInterestsWikidata, searchInterestsDBPedia } from './data'\nimport { Interest } from './Profile'\n\nconst debouncedSearchWikidata = debounce(searchInterestsWikidata, 30)\nconst debouncedSearchDBPedia = debounce(searchInterestsDBPedia, 30)\n\ninterface Props {\n  onSelectInterest: (interest: Interest) => void\n}\n\nconst InterestSearch: React.FC<Props> = ({ onSelectInterest }) => {\n  const [query, setQuery] = useState('')\n  const [found, setFound] = useState<Interest[]>([])\n  const [source, setSource] = useState<'dbp' | 'wd'>('wd')\n\n  useEffect(() => {\n    ;(async () => {\n      const output = await (source === 'wd'\n        ? debouncedSearchWikidata\n        : debouncedSearchDBPedia)(query)\n      if (output) {\n        setFound(output)\n      }\n    })()\n  }, [query, source])\n\n  const handleClickInterest = (interest: Interest) => {\n    setQuery('')\n    onSelectInterest(interest)\n  }\n\n  const handleSwitchSource = () => {\n    setSource(current => (current === 'wd' ? 'dbp' : 'wd'))\n  }\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"add interest\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button className=\"button\" onClick={handleSwitchSource}>\n        {source === 'wd' ? 'wikidata' : 'dbpedia'}\n      </button>\n      <ul>\n        {found.map(interest => (\n          <li key={interest.uri} onClick={() => handleClickInterest(interest)}>\n            {interest.label}: {interest.description}\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default InterestSearch\n","import React from 'react'\nimport { Interest } from '.'\n\ninterface Props {\n  interest: Interest\n  onClose: () => void\n}\n\nconst InterestTag: React.FC<Props> = ({ interest, onClose }) => (\n  <div className=\"tags has-addons\">\n    <a\n      title={interest.description}\n      className={`tag is-link${interest.pending ? ' is-light' : ''}`}\n      href={interest.uri}\n    >\n      {interest.label}\n    </a>\n    <button\n      disabled={!!interest.pending}\n      onClick={() => onClose()}\n      className=\"tag is-delete\"\n    ></button>\n  </div>\n)\n\nexport default InterestTag\n","import React from 'react'\nimport { Interest, User } from '.'\nimport styled from 'styled-components'\nimport InterestSearch from '../InterestSearch'\nimport InterestTag from './InterestTag'\nimport { IriString } from '@inrupt/solid-client'\n\ninterface Props {\n  user: User\n  loggedUserId: IriString\n  onAddInterest: (interest: Interest) => void\n  onRemoveInterest: (interest: Interest) => void\n}\n\nconst Photo = styled.img`\n  && {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst Profile: React.FC<Props> = ({\n  user,\n  loggedUserId,\n  onAddInterest,\n  onRemoveInterest,\n}) => {\n  const interests = Object.values(user.interests)\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              {user.photo && (\n                <Photo src={user.photo} alt={`Photo of ${user.name}`} />\n              )}\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{user.name}</p>\n            <p className=\"subtitle is-6\">\n              <a href={user.webId}>{user.webId}</a>\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {interests.length > 0 ? (\n            <div className=\"field is-grouped is-grouped-multiline\">\n              {interests.map(interest => (\n                <div key={interest.uri} className=\"control\">\n                  <InterestTag\n                    interest={interest}\n                    onClose={() => onRemoveInterest(interest)}\n                  />\n                </div>\n              ))}\n            </div>\n          ) : (\n            'no interests'\n          )}\n          {loggedUserId === user.webId && (\n            <InterestSearch onSelectInterest={onAddInterest} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import React, { useEffect, useState } from 'react'\nimport WebIdForm from './WebIdForm'\nimport {\n  addUrl,\n  getSolidDataset,\n  getTerm,\n  getThing,\n  getUrlAll,\n  IriString,\n  removeUrl,\n  saveSolidDatasetAt,\n  setThing,\n} from '@inrupt/solid-client'\n// import { fetch } from '@inrupt/solid-client-authn-browser'\nimport * as auth from '@inrupt/solid-client-authn-browser'\nimport Profile from './Profile'\nimport { foaf, vcard } from 'rdf-namespaces'\nimport { getInterest } from '../data'\n\ninterface Props {\n  webId: string\n}\n\nexport type Interest = {\n  label: string\n  uri: IriString\n  description: string\n  pending?: boolean\n}\n\nexport type User = {\n  webId: string\n  name: string\n  photo: string\n  interests: { [uri: string]: Interest }\n}\n\nconst ProfileContainer: React.FC<Props> = ({ webId }) => {\n  const [userId, setUserId] = useState(webId)\n  const [user, setUser] = useState<User>({\n    webId: '',\n    name: '',\n    photo: '',\n    interests: {},\n  })\n\n  const handleChangeUser = (newUserId: string) => {\n    setUserId(newUserId)\n  }\n\n  const handleAddInterest = async (interest: Interest) => {\n    if (!Object.keys(user.interests).includes(interest.uri)) {\n      setUser(user => ({\n        ...user,\n        interests: {\n          ...user.interests,\n          ...{ [interest.uri]: { ...interest, pending: true } },\n        },\n      }))\n      const dataset = await getSolidDataset(userId, { fetch: auth.fetch })\n      const user = getThing(dataset, userId)\n      if (user) {\n        const updatedUser = addUrl(user, foaf.topic_interest, interest.uri)\n        const changedDataset = setThing(dataset, updatedUser)\n        await saveSolidDatasetAt(userId, changedDataset, { fetch: auth.fetch })\n      }\n      setUser(user => ({\n        ...user,\n        interests: {\n          ...user.interests,\n          ...{ [interest.uri]: { ...interest } },\n        },\n      }))\n    } else alert(`${interest.label} already added`)\n  }\n\n  const handleRemoveInterest = async (interest: Interest) => {\n    setUser(user => ({\n      ...user,\n      interests: {\n        ...user.interests,\n        ...{ [interest.uri]: { ...interest, pending: true } },\n      },\n    }))\n    const dataset = await getSolidDataset(userId, { fetch: auth.fetch })\n    const user = getThing(dataset, userId)\n    if (user) {\n      const updatedUser = removeUrl(user, foaf.topic_interest, interest.uri)\n      const changedDataset = setThing(dataset, updatedUser)\n      await saveSolidDatasetAt(userId, changedDataset, { fetch: auth.fetch })\n    }\n    setUser(user => {\n      const { [interest.uri]: _interest, ...interests } = user.interests\n      return {\n        ...user,\n        interests,\n      }\n    })\n  }\n\n  // fetch the new user when userId changes\n  useEffect(() => {\n    setUser({\n      webId: '',\n      name: '',\n      photo: '',\n      interests: {},\n    })\n    ;(async () => {\n      const dataset = await getSolidDataset(userId, { fetch: auth.fetch })\n      const user = getThing(dataset, userId)\n      if (user) {\n        const name = getTerm(user, foaf.name)?.value ?? ''\n        const photo =\n          getTerm(user, foaf.img)?.value ??\n          getTerm(user, vcard.hasPhoto)?.value ??\n          ''\n        const interestUris = getUrlAll(user, foaf.topic_interest)\n        const preInterests = Object.fromEntries(\n          interestUris.map(uri => [\n            uri,\n            { uri, label: '...', description: '', pending: true },\n          ]),\n        )\n        setUser({ name, photo, webId: userId, interests: preInterests })\n\n        for (const uri of interestUris) {\n          getInterest(uri).then(interest =>\n            setUser(user => ({\n              ...user,\n              interests: {\n                ...user.interests,\n                ...{ [interest.uri]: { ...interest } },\n              },\n            })),\n          )\n        }\n      }\n    })()\n  }, [userId, webId])\n\n  return (\n    <>\n      <WebIdForm webId={webId} onChangeUser={handleChangeUser} />\n      {user.webId ? (\n        <Profile\n          onAddInterest={handleAddInterest}\n          onRemoveInterest={handleRemoveInterest}\n          user={user}\n          loggedUserId={webId}\n        />\n      ) : (\n        'loading profile...'\n      )}\n    </>\n  )\n}\n\nexport default ProfileContainer\n","import React, { useContext } from 'react'\nimport Login from './Login'\nimport Profile from './Profile'\nimport SessionContext from './SessionContext'\n\nfunction App() {\n  const [info] = useContext(SessionContext)\n  return (\n    <>\n      <Login />\n      {info.status === 'in' && <Profile webId={info.webId} />}\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React, { ReactNode, useState } from 'react'\nimport SessionContext, { SessionInfo } from './SessionContext'\ninterface Props {\n  children: ReactNode\n}\n\nconst SessionProvider: React.FC<Props> = ({ children }) => {\n  const [info, setInfo] = useState<SessionInfo>({\n    status: 'pending',\n    webId: '',\n  })\n  return (\n    <SessionContext.Provider value={[info, setInfo]}>\n      {children}\n    </SessionContext.Provider>\n  )\n}\n\nexport default SessionProvider\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport SessionProvider from './SessionProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionProvider>\n      <App />\n    </SessionProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}